{"version":3,"sources":["components/ErrorBoundary.js","utils/colors.js","components/Header.js","components/DragAndDropContainer/AlbumList/AlbumList.js","components/DragAndDropContainer/Unshelved.js","components/DragAndDropContainer/ShelfItem.js","components/DragAndDropContainer/AlbumList/AlbumItem.js","components/DragAndDropContainer/Button.js","components/DragAndDropContainer/DragAndDropContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","state","error","info","console","this","props","children","Component","colors","getContrastText","color","meetsContrastGuidelines","theme","contentBg","transparentize","contentBorder","headingText","cardBg","cardText","primary","primaryText","iconBtnHover","Header","styled","header","AppHeader","List","ul","isDraggingOver","AlbumList","id","direction","droppableId","provided","snapshot","ref","innerRef","droppableProps","placeholder","Shelf","div","Heading","h2","AlbumCount","p","Unshelved","albumsLoadedCount","totalAlbumCount","albumElts","Element","li","Content","SecretInput","input","DeleteButton","button","ShelfItem","onDeleteShelf","useState","name","setName","className","type","value","onChange","e","target","onClick","icon","faTrashAlt","isDragging","isHorizontal","display","verticalAlign","Row","Title","h3","TitleText","span","Year","DataHeading","h4","DataList","DataItem","AlbumItem","index","artists","map","item","formats","labels","draggableId","toString","draggableProps","dragHandleProps","as","faMusic","title","year","faMicrophoneAlt","fixedWidth","faTag","faCompactDisc","Button","faIcon","text","otherAttrs","role","aria-hidden","Column","section","ShelfList","DragAndDropContainer","allData","newPageData","onLoadPage","hasLoadedAllPages","unshelved","key","orderedIds","shelf1","columns","setColumns","nextShelfId","setNextShelfId","useEffect","newIds","Object","keys","prevState","newUnshelvedIds","concat","window","confirm","albumsInColumn","columnsCopy","unshelvedAlbumsCopy","allUnshelvedAlbums","getAlbumItems","columnId","albumId","horizontal","onDragEnd","result","source","destination","startListId","startListIndex","endListId","endListIndex","newStartIds","Array","from","splice","newEndIds","length","faDownload","disabled","faPlus","newShelfId","Page","Main","main","App","setError","isLoaded","setIsLoaded","currentPage","setCurrentPage","lastPage","setLastPage","totalAlbums","setTotalAlbums","setNewPageData","setAllData","fetch","method","headers","then","response","json","transformedData","dataArr","dataObj","forEach","basic_information","transformData","releases","pagination","pages","items","catch","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.182591cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error: error }\n  }\n\n  componentDidCatch(error, info) {\n    console.error(error, info);\n  }\n\n  render() {\n    if (this.state.error) {\n      return <p>Something went wrong on our end. Check the console or refresh the page.</p>\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { transparentize, meetsContrastGuidelines } from 'polished';\n\nconst colors = {\n  white: '#fff',\n  black: '#000',\n  orange: '#c64a01',\n  lightGray: '#777',\n  darkGray: '#444'\n}\n\nconst getContrastText = (color) => {\n  if (meetsContrastGuidelines(color, colors.white)) {\n    return colors.white\n  } else {\n    return colors.black\n  }\n}\n\nconst theme = {\n  contentBg: transparentize(0.2, colors.black),\n  contentBorder: colors.lightGray,\n  headingText: getContrastText(colors.black),\n  cardBg: colors.darkGray,\n  cardText: getContrastText(colors.darkGray),\n  primary: colors.orange,\n  primaryText: getContrastText(colors.orange),\n  iconBtnHover: colors.darkGray\n}\n\nexport default theme;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport theme from '../utils/colors';\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${theme.contentBorder};\n  background-color: ${theme.contentBg};\n  padding: 20px 50px;\n  color: ${theme.headingText};\n`;\n\nfunction AppHeader() {\n  return (\n    <Header>\n      <h1>Music Library</h1>\n      <nav></nav>\n    </Header>\n  );\n}\n\nexport default AppHeader;\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { transparentize } from 'polished';\r\nimport theme from '../../../utils/colors';\r\n\r\nexport const List = styled.ul`\r\n  transition: background-color 0.25s ease-in-out;\r\n  max-width: 100%;\r\n  min-height: 150px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0;\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  padding-bottom: 0;\r\n  list-style-type: none;\r\n  background-color: ${props => props.isDraggingOver ? transparentize('0.7', theme.primary) : 'transparent'};\r\n`;\r\n\r\nfunction AlbumList({ id, direction, children }) {\r\n  return (\r\n    <Droppable droppableId={id} direction={direction ? direction : 'vertical'}>\r\n      {(provided, snapshot) => (\r\n        <List\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n        >\r\n          {children}\r\n          {provided.placeholder}\r\n        </List>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nexport default AlbumList;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport AlbumList from './AlbumList/AlbumList';\r\nimport theme from '../../utils/colors';\r\n\r\nconst Shelf = styled.div`\r\n  margin-bottom: 10px;\r\n  border: 1px solid ${theme.contentBorder};\r\n  border-radius: 5px;\r\n  background-color: ${theme.contentBg};\r\n  padding-bottom: 10px;\r\n  color: ${theme.headingText};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px 10px;\r\n  border-bottom: 1px solid ${theme.contentBorder};\r\n`;\r\n\r\nconst Heading = styled.h2`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n`;\r\n\r\nconst AlbumCount = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nfunction Unshelved({ albumsLoadedCount, totalAlbumCount, albumElts }) {\r\n  return (\r\n    <Shelf>\r\n      <Header>\r\n        <Heading>Unshelved Music</Heading>\r\n        <AlbumCount>\r\n          Loaded {albumsLoadedCount} of {totalAlbumCount} albums\r\n        </AlbumCount>\r\n      </Header>\r\n      <AlbumList id=\"unshelved\" direction=\"vertical\">\r\n        {albumElts}\r\n      </AlbumList>\r\n    </Shelf>\r\n  );\r\n}\r\n\r\nexport default Unshelved;\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport AlbumList from './AlbumList/AlbumList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport theme from '../../utils/colors';\r\n\r\nconst Element = styled.li`\r\n  margin-bottom: 10px;\r\n  border: 1px solid ${theme.contentBorder};\r\n  border-radius: 5px;\r\n  background-color: ${theme.contentBg};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${theme.contentBorder};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Heading = styled.h2``;\r\n\r\nconst Content = styled.div``;\r\n\r\nconst SecretInput = styled.input`\r\n  transition: border-bottom 0.25s ease-in-out;\r\n  height: 40px;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  border-bottom: 1px solid transparent;\r\n  background-color: transparent;\r\n  font-size: 20px;\r\n  color: ${theme.headingText};\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid ${theme.headingText};\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  transition: background-color 0.25s ease-in-out;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n  padding: 0 20px;\r\n  color: inherit;\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background-color: ${theme.iconBtnHover};\r\n  }\r\n`;\r\n\r\nfunction ShelfItem({ id, onDeleteShelf, albumElts }) {\r\n  const [name, setName] = useState('My New Shelf');\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Element key={id}>\r\n      <Header>\r\n        <label>\r\n          <Heading className=\"sr-only\">{name}</Heading>\r\n          <SecretInput type=\"text\" value={name} onChange={handleNameChange} />\r\n        </label>\r\n        <DeleteButton type=\"button\" onClick={() => onDeleteShelf(id)}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n          <span className=\"sr-only\">Delete Shelf</span>\r\n        </DeleteButton>\r\n      </Header>\r\n      <Content>\r\n        <AlbumList id={id} direction=\"horizontal\">\r\n          {albumElts}\r\n        </AlbumList>\r\n      </Content>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport default ShelfItem;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faCompactDisc, \r\n  faMicrophoneAlt, \r\n  faMusic, \r\n  faTag\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from '@emotion/styled';\r\nimport { transparentize } from 'polished';\r\nimport theme from './../../../utils/colors';\r\n\r\nconst Element = styled.li`\r\n  transition: box-shadow 0.25s ease-in-out;\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  max-width: 100%;\r\n  width: 250px;\r\n  border-radius: 5px;\r\n  background-color: ${theme.cardBg};\r\n  color: ${theme.cardText};\r\n  padding: 15px;\r\n  box-shadow: ${props => props.isDragging ? `0 5px 10px ${transparentize(0.5, 'black')}` : '0 5px 10px transparent'};\r\n\r\n  ${props => props.isHorizontal ? {\r\n    display: 'inline-block',\r\n    verticalAlign: 'top'\r\n  } : null}\r\n\r\n  &::before {\r\n    content: '';\r\n    transition: background-color 0.25s ease-in-out;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 5px;\r\n    background-color: ${props => props.isDragging ? theme.primary : 'transparent'};\r\n  }\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    &::before {\r\n      background-color: ${theme.primary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  margin-top: 0;\r\n  margin-bottom: 0.5em;\r\n  line-height: 1.2;\r\n  .fa-music {\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-left: 0.5em;\r\n`;\r\n\r\nconst Year = styled.p`\r\n  justify-self: flex-end;\r\n  margin: 0;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst DataHeading = styled.h4`\r\n  display: inline-block;\r\n  margin-top: 0;\r\n  margin-bottom: 0.25em;\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst DataList = styled.ul`\r\n  display: inline;\r\n  margin-left: 0;\r\n  margin-bottom: 0.25em;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst DataItem = styled.li`\r\n  display: inline;\r\n  &:nth-of-type(n + 2) {\r\n    &:before {\r\n      content: ', '\r\n    }\r\n  }\r\n`;\r\n\r\nfunction AlbumItem({info, index, isHorizontal}) {\r\n  const artists = info.artists.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n  const formats = info.formats.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n  const labels = info.labels.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n\r\n  return (\r\n    <Draggable\r\n      key={info.id}\r\n      draggableId={info.id.toString()} \r\n      index={index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <Element\r\n          key={info.id}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          isHorizontal={isHorizontal}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          <Row as=\"header\">\r\n            <Title>\r\n              <FontAwesomeIcon icon={faMusic} />\r\n              <TitleText>{info.title}</TitleText>\r\n            </Title>\r\n            <Year>{info.year ? info.year : 'Unknown'}</Year>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faMicrophoneAlt} fixedWidth />\r\n              <span className=\"sr-only\">Artists</span>\r\n            </DataHeading>\r\n            <DataList>{artists}</DataList>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faTag} fixedWidth />\r\n              <span className=\"sr-only\">Labels</span>\r\n            </DataHeading>\r\n            <DataList>{labels}</DataList>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faCompactDisc} fixedWidth />\r\n              <span className=\"sr-only\">Formats</span>\r\n            </DataHeading>\r\n            <DataList>{formats}</DataList>\r\n          </Row>\r\n        </Element>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default AlbumItem;\r\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport theme from '../../utils/colors';\n\nconst Element = styled.button`\n  transition: all 0.25s ease-in-out;\n  border: 1px solid ${theme.primaryText};\n  border-radius: 5px;\n  background-color: ${theme.primary};\n  padding: 10px 20px;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n  color: ${theme.primaryText};\n  cursor: pointer;\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: ${theme.primaryText};\n    color: ${theme.primary};\n  }\n\n  .svg-inline--fa {\n    margin-right: 5px;\n  }\n`;\n\nfunction Button({ faIcon, text, ...otherAttrs}) {\n  return (\n    <Element type=\"button\" {...otherAttrs}>\n      <FontAwesomeIcon icon={faIcon} role=\"presentation\" aria-hidden=\"true\" />\n      <span>{text}</span>\n    </Element>\n  );\n}\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport styled from '@emotion/styled';\r\nimport Unshelved from './Unshelved';\r\nimport ShelfItem from './ShelfItem';\r\nimport AlbumItem from './AlbumList/AlbumItem';\r\nimport Button from './Button';\r\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Column = styled.section`\r\n  width: calc(100% - 310px);\r\n  flex: 0 1 auto;\r\n  &:first-of-type {\r\n    flex: 0 1 310px;\r\n    padding-right: 30px;\r\n  }\r\n`;\r\n\r\nconst ShelfList = styled.ul`\r\n  max-width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nfunction DragAndDropContainer({ \r\n  allData, \r\n  newPageData,\r\n  onLoadPage, \r\n  hasLoadedAllPages,\r\n  totalAlbumCount\r\n}) {\r\n  const initialColumnsState = {\r\n    unshelved: {\r\n      key: 'unshelved',\r\n      name: 'Unshelved Music',\r\n      orderedIds: []\r\n    },\r\n    shelf1: {\r\n      key: 'shelf1',\r\n      name: 'My New Shelf',\r\n      orderedIds: []\r\n    }\r\n  }\r\n  const [columns, setColumns] = useState(initialColumnsState);\r\n  const [nextShelfId, setNextShelfId] = useState(2); // One default shelf\r\n\r\n  // Add newly fetched data ids to unshelved column\r\n  useEffect(() => {\r\n    const newIds = Object.keys(newPageData).map(item => item);\r\n    setColumns(prevState => {\r\n      const newUnshelvedIds = prevState['unshelved'].orderedIds.concat(newIds)\r\n      return {\r\n        ...prevState,\r\n        'unshelved': {\r\n          ...prevState['unshelved'],\r\n          orderedIds: newUnshelvedIds\r\n        }\r\n      }\r\n    })\r\n  }, [newPageData]);\r\n\r\n\r\n  const updateListContent = (result) => {\r\n    const { draggableId, source, destination } = result;\r\n    const startListId = source.droppableId;\r\n    const startListIndex = source.index;\r\n    const endListId = destination?.droppableId;\r\n    const endListIndex = destination?.index;\r\n\r\n    // If no destination, or if destination same as source, do nothing\r\n    if (!destination || (\r\n      (startListId === endListId) &&\r\n      source.index === destination.index\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    // Update column orderedIds\r\n    const newStartIds = Array.from(columns[startListId].orderedIds);\r\n    newStartIds.splice(startListIndex, 1);\r\n\r\n    if (startListId === endListId) {\r\n      newStartIds.splice(endListIndex, 0, draggableId);\r\n      setColumns({\r\n        ...columns,\r\n        [startListId]: {\r\n          ...columns[startListId],\r\n          orderedIds: newStartIds\r\n        }\r\n      })\r\n    } else {\r\n      const newEndIds = Array.from(columns[endListId].orderedIds);\r\n      newEndIds.splice(endListIndex, 0, draggableId);\r\n      setColumns({\r\n        ...columns,\r\n        [startListId]: {\r\n          ...columns[startListId],\r\n          orderedIds: newStartIds\r\n        },\r\n        [endListId]: {\r\n          ...columns[endListId],\r\n          orderedIds: newEndIds\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onAddShelf = (e) => {\r\n    const newShelfId = `shelf${nextShelfId}`;\r\n    setColumns(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [newShelfId]: {\r\n          key: newShelfId,\r\n          name: 'My New Shelf',\r\n          orderedIds: []\r\n        }\r\n      }\r\n    });\r\n    setNextShelfId(prevState => prevState + 1);\r\n  }\r\n\r\n  const onDeleteShelf = (id) => {\r\n    const message = \"Any albums on this shelf will be returned to the Unshelved column. Do you still want to delete this shelf?\"\r\n    const confirmDelete = window.confirm(message)\r\n    if (confirmDelete) {\r\n      setColumns(prevState => {\r\n        const albumsInColumn = columns[id].orderedIds;\r\n        let columnsCopy = {...prevState};\r\n        delete columnsCopy[id];\r\n        const unshelvedAlbumsCopy = [...columnsCopy['unshelved'].orderedIds]\r\n        const allUnshelvedAlbums = albumsInColumn.concat(unshelvedAlbumsCopy);\r\n        return {\r\n          ...columnsCopy,\r\n          'unshelved': {\r\n            ...columnsCopy['unshelved'],\r\n            orderedIds: allUnshelvedAlbums\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const getAlbumItems = ({columnId, isHorizontal = false}) => {\r\n    const items = columns[columnId].orderedIds.map((albumId, index) => {\r\n      return (\r\n        <AlbumItem\r\n          key={albumId}\r\n          index={index}\r\n          info={allData[albumId]}\r\n          horizontal={isHorizontal}\r\n        />\r\n      )\r\n    });\r\n    return items;\r\n  }\r\n\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={updateListContent}\r\n    >\r\n      <Column>\r\n        <Unshelved \r\n          albumsLoadedCount={Object.keys(allData).length}\r\n          totalAlbumCount={totalAlbumCount}\r\n          albumElts={getAlbumItems({ columnId: 'unshelved' })}\r\n        />\r\n        <Button \r\n          faIcon={faDownload}\r\n          text={\"Load More Albums\"}\r\n          onClick={onLoadPage} \r\n          disabled={hasLoadedAllPages}\r\n        />\r\n      </Column>\r\n      <Column>\r\n        {Object.keys(columns).length === 1 ? (\r\n          <p>Please add a shelf</p>\r\n        ) : (\r\n          <ShelfList>\r\n            {Object.keys(columns).map(columnId => {\r\n              return columnId !== 'unshelved' ? (\r\n                <ShelfItem\r\n                  key={columnId}\r\n                  id={columnId}\r\n                  onDeleteShelf={onDeleteShelf}\r\n                  albumElts={getAlbumItems({ columnId, isHorizontal: true })}\r\n                />  \r\n              ) : null\r\n            })}\r\n          </ShelfList>\r\n        )}\r\n        <Button faIcon={faPlus} text={\"Add a Shelf\"} onClick={onAddShelf} />\r\n      </Column>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default DragAndDropContainer;\r\n","import React, { useState, useEffect } from 'react';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Header from './components/Header';\nimport DragAndDropContainer from './components/DragAndDropContainer/DragAndDropContainer';\nimport styled from '@emotion/styled';\n\nconst Page = styled.div`\n  min-height: 100vh;\n  background-color: #333;\n  color: white;\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: \n      linear-gradient(to top, black, transparent), \n      url('https://loremflickr.com/g/1920/1200/music,record/all');\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n`;\n\nconst Main = styled.main`\n  position: relative;\n  display: flex;\n  padding: 50px;\n`;\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(0);\n  const [totalAlbums, setTotalAlbums] = useState(0)\n  const [newPageData, setNewPageData] = useState({});\n  const [allData, setAllData] = useState({});\n\n  // From API array to object with ids as keys\n  const transformData = (dataArr) => {\n    let dataObj = {};\n    dataArr.forEach(item => {\n      dataObj[item.id] = item.basic_information;\n    });\n    return dataObj;\n  }\n\n  // Get a page of data\n  useEffect(() => {\n    setError(false);\n    fetch(`https://api.discogs.com/users/blacklight/collection/folders/0/releases?page=${currentPage}&per_page=20`, \n      {\n        method: 'GET',\n        headers: {\n          'User-Agent': 'MusicLibraryDemoApp/1.0'\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(json => {\n        const rawAlbumList = json.releases;\n        const transformedData = transformData(rawAlbumList)\n        setLastPage(json.pagination?.pages);\n        setTotalAlbums(json.pagination?.items);\n        setNewPageData(transformedData);\n        setAllData(prevState => {\n          return {\n            ...prevState,\n            ...transformedData\n          };\n        })\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setError(true)\n        console.log(`Something went wrong: ${error}`)\n      });\n  }, [currentPage])\n\n  return (\n    <Page>\n      <Header />\n      <Main>\n        {!isLoaded && (\n          <div>\n            <p>Loading...</p>\n          </div>\n        )}\n        {isLoaded && (\n          <ErrorBoundary>\n            <DragAndDropContainer \n              allData={allData} \n              newPageData={newPageData} \n              hasLoadedAllPages={currentPage === lastPage} \n              onLoadPage={() => setCurrentPage(prevState => prevState + 1)}\n              totalAlbumCount={totalAlbums}\n            />\n          </ErrorBoundary>\n        )}\n      </Main>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}