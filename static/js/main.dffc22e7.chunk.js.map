{"version":3,"sources":["components/ErrorBoundary.js","utils/colors.js","components/DragAndDropContainer/Button.js","components/Header.js","components/DragAndDropContainer/AlbumList/AlbumList.js","components/DragAndDropContainer/Unshelved.js","components/DragAndDropContainer/ShelfItem.js","components/DragAndDropContainer/AlbumList/AlbumItem.js","components/DragAndDropContainer/DragAndDropContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","state","error","info","console","this","props","children","Component","colors","getContrastText","color","meetsContrastGuidelines","theme","contentBg","transparentize","contentBorder","headingText","cardBg","cardText","primary","primaryText","iconBtnHover","secondary","secondaryText","disabledBtn","disabledBtnText","Element","styled","button","Button","faIcon","text","disabled","otherAttrs","type","icon","role","aria-hidden","Header","header","Input","input","AppHeader","username","onSubmitUser","useState","tempUsername","setTempUsername","onChange","e","target","value","onClick","preventDefault","onSubmit","faArrowRight","List","ul","isDraggingOver","AlbumList","id","direction","droppableId","provided","snapshot","ref","innerRef","droppableProps","placeholder","Shelf","div","Heading","h2","AlbumCount","p","Unshelved","albumsLoadedCount","totalAlbumCount","albumElts","li","Content","SecretInput","DeleteButton","ShelfItem","onDeleteShelf","name","setName","className","faTrashAlt","isDragging","isHorizontal","display","verticalAlign","Row","Title","h3","TitleText","span","Year","DataHeading","h4","DataList","DataItem","AlbumItem","index","artists","map","item","formats","labels","draggableId","toString","draggableProps","dragHandleProps","as","faMusic","title","year","faMicrophoneAlt","fixedWidth","faTag","faCompactDisc","Math","random","Column","section","ShelfList","DragAndDropContainer","allData","newPageData","onLoadPage","hasLoadedAllPages","initialColumnsState","useMemo","unshelved","key","orderedIds","shelf1","columns","setColumns","nextShelfId","setNextShelfId","updateAllDataWithNewPage","useCallback","newIds","Object","keys","length","prevState","newUnshelvedIds","concat","useEffect","window","confirm","albumsInColumn","columnsCopy","unshelvedAlbumsCopy","allUnshelvedAlbums","getAlbumItems","columnId","albumId","horizontal","onDragEnd","result","source","destination","startListId","startListIndex","endListId","endListIndex","newStartIds","Array","from","splice","newEndIds","faDownload","faPlus","newShelfId","Page","Main","main","App","setError","isLoaded","setIsLoaded","currentPage","setCurrentPage","lastPage","setLastPage","totalAlbums","setTotalAlbums","setNewPageData","setAllData","setUsername","updateDataOnNewPageLoad","json","transformedData","dataArr","dataObj","forEach","basic_information","transformData","releases","pagination","pages","items","resetDataForNewUser","fetch","method","headers","then","response","ok","status","Error","catch","newUsername","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dffc22e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error: error }\n  }\n\n  componentDidCatch(error, info) {\n    console.error(error, info);\n  }\n\n  render() {\n    if (this.state.error) {\n      return <p>Something went wrong on our end. Check the console or refresh the page.</p>\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { transparentize, meetsContrastGuidelines } from 'polished';\n\nconst colors = {\n  white: '#fff',\n  black: '#000',\n  orange: '#c64a01',\n  lightGray: '#777',\n  darkGray: '#444'\n}\n\nconst getContrastText = (color) => {\n  if (meetsContrastGuidelines(color, colors.white)) {\n    return colors.white\n  } else {\n    return colors.black\n  }\n}\n\nconst theme = {\n  contentBg: transparentize(0.2, colors.black),\n  contentBorder: colors.lightGray,\n  headingText: getContrastText(colors.black),\n  cardBg: colors.darkGray,\n  cardText: getContrastText(colors.darkGray),\n  primary: colors.orange,\n  primaryText: getContrastText(colors.orange),\n  iconBtnHover: colors.darkGray,\n  secondary: colors.darkGray,\n  secondaryText: getContrastText(colors.darkGray),\n  disabledBtn: colors.lightGray,\n  disabledBtnText: getContrastText(colors.lightGray),\n}\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport theme from '../../utils/colors';\n\nconst Element = styled.button`\n  transition: all 0.25s ease-in-out;\n  border: 1px solid ${theme.primaryText};\n  border-radius: 5px;\n  background-color: ${props => props.theme === 'primary' ? theme.primary : theme.secondary};\n  padding: 10px 20px;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n  color: ${props => props.theme === 'primary' ? theme.primaryText : theme.secondaryText};\n  cursor: pointer;\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: ${props => props.theme === 'primary' ? theme.primaryText : theme.secondaryText};\n    color: ${props => props.theme === 'primary' ? theme.primary : theme.secondary};\n  }\n\n  &:disabled {\n    border-color: ${theme.disabledBtn};\n    background-color: ${theme.disabledBtn};\n    color: ${theme.disabledBtnText};\n    cursor: default;\n    pointer-events: none;\n    > * {\n      opacity: 0.7;\n    }\n  }\n\n  .svg-inline--fa {\n    margin-right: 5px;\n  }\n`;\n\nfunction Button({ faIcon, text, theme = 'primary', disabled = false, ...otherAttrs}) {\n  return (\n    <Element type=\"button\" theme={theme} disabled={disabled} {...otherAttrs}>\n      <FontAwesomeIcon icon={faIcon} role=\"presentation\" aria-hidden=\"true\" />\n      <span>{text}</span>\n    </Element>\n  );\n}\n\nButton.propTypes = {\n  faIcon: PropTypes.any.isRequired,\n  text: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  theme: PropTypes.oneOf(['primary', 'secondary'])\n}\n\nexport default Button;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport theme from '../utils/colors';\nimport Button from './DragAndDropContainer/Button';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${theme.contentBorder};\n  background-color: ${theme.contentBg};\n  padding: 20px 50px;\n  color: ${theme.headingText};\n`;\n\nconst Input = styled.input`\n  transition: border-color .25s ease-in-out;\n  margin-right: 5px;\n  height: 30px;\n  border: 1px solid ${theme.contentBorder};\n  background-color: transparent;\n  padding: 5px 10px;\n  color: ${theme.headingText};\n\n  &:hover,\n  &:active,\n  &:focus {\n    border-color: ${theme.headingText};\n  }\n`;\n\nfunction AppHeader({ username, onSubmitUser }) {\n  const [tempUsername, setTempUsername] = useState(username);\n  const onChangeTempUser = (e) => {\n    setTempUsername(e.target.value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onSubmitUser(tempUsername);\n  }\n  return (\n    <Header>\n      <h1>Music Library</h1>\n      <form>\n        <label>\n          <div>Choose a Discogs user</div>\n          <Input type=\"text\" onChange={onChangeTempUser} value={tempUsername} />\n        </label>\n        <Button \n          type=\"submit\" \n          onClick={(e) => onSubmit(e)} \n          faIcon={faArrowRight} \n          text=\"Load User\"\n          theme=\"secondary\"\n          disabled={tempUsername === username}\n        />\n      </form>\n    </Header>\n  );\n}\n\nAppHeader.propTypes = {\n  username: PropTypes.string.isRequired,\n  onSubmitUser: PropTypes.func.isRequired\n}\n\nexport default AppHeader;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { transparentize } from 'polished';\r\nimport theme from '../../../utils/colors';\r\n\r\nexport const List = styled.ul`\r\n  transition: background-color 0.25s ease-in-out;\r\n  max-width: 100%;\r\n  min-height: 150px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0;\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  padding-bottom: 0;\r\n  list-style-type: none;\r\n  background-color: ${props => props.isDraggingOver ? transparentize('0.7', theme.primary) : 'transparent'};\r\n`;\r\n\r\nfunction AlbumList({ id, direction, children }) {\r\n  return (\r\n    <Droppable droppableId={id} direction={direction ? direction : 'vertical'}>\r\n      {(provided, snapshot) => (\r\n        <List\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n        >\r\n          {children}\r\n          {provided.placeholder}\r\n        </List>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nAlbumList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  direction: PropTypes.string,\r\n  children: PropTypes.arrayOf(PropTypes.element)\r\n}\r\n\r\nexport default AlbumList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport AlbumList from './AlbumList/AlbumList';\r\nimport theme from '../../utils/colors';\r\n\r\nconst Shelf = styled.div`\r\n  margin-bottom: 10px;\r\n  border: 1px solid ${theme.contentBorder};\r\n  border-radius: 5px;\r\n  background-color: ${theme.contentBg};\r\n  padding-bottom: 10px;\r\n  color: ${theme.headingText};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px 10px;\r\n  border-bottom: 1px solid ${theme.contentBorder};\r\n`;\r\n\r\nconst Heading = styled.h2`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n`;\r\n\r\nconst AlbumCount = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nfunction Unshelved({ albumsLoadedCount, totalAlbumCount, albumElts }) {\r\n  return (\r\n    <Shelf>\r\n      <Header>\r\n        <Heading>Unshelved Music</Heading>\r\n        <AlbumCount>\r\n          Loaded {albumsLoadedCount} of {totalAlbumCount} albums\r\n        </AlbumCount>\r\n      </Header>\r\n      <AlbumList id=\"unshelved\" direction=\"vertical\">\r\n        {albumElts}\r\n      </AlbumList>\r\n    </Shelf>\r\n  );\r\n}\r\n\r\nUnshelved.propTypes = {\r\n  albumsLoadedCount: PropTypes.number.isRequired,\r\n  totalAlbumCount: PropTypes.number.isRequired,\r\n  albumElts: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n}\r\n\r\nexport default Unshelved;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport AlbumList from './AlbumList/AlbumList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport theme from '../../utils/colors';\r\n\r\nconst Element = styled.li`\r\n  margin-bottom: 10px;\r\n  border: 1px solid ${theme.contentBorder};\r\n  border-radius: 5px;\r\n  background-color: ${theme.contentBg};\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${theme.contentBorder};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Heading = styled.h2``;\r\n\r\nconst Content = styled.div``;\r\n\r\nconst SecretInput = styled.input`\r\n  transition: border-bottom 0.25s ease-in-out;\r\n  height: 40px;\r\n  border-top: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  border-bottom: 1px solid transparent;\r\n  background-color: transparent;\r\n  font-size: 20px;\r\n  color: ${theme.headingText};\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid ${theme.headingText};\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  transition: background-color 0.25s ease-in-out;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n  padding: 0 20px;\r\n  color: inherit;\r\n  cursor: pointer;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background-color: ${theme.iconBtnHover};\r\n  }\r\n`;\r\n\r\nfunction ShelfItem({ id, onDeleteShelf, albumElts }) {\r\n  const [name, setName] = useState('My New Shelf');\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Element key={id}>\r\n      <Header>\r\n        <label>\r\n          <Heading className=\"sr-only\">{name}</Heading>\r\n          <SecretInput type=\"text\" value={name} onChange={handleNameChange} />\r\n        </label>\r\n        <DeleteButton type=\"button\" onClick={() => onDeleteShelf(id)}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n          <span className=\"sr-only\">Delete Shelf</span>\r\n        </DeleteButton>\r\n      </Header>\r\n      <Content>\r\n        <AlbumList id={id} direction=\"horizontal\">\r\n          {albumElts}\r\n        </AlbumList>\r\n      </Content>\r\n    </Element>\r\n  );\r\n}\r\n\r\nShelfItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteShelf: PropTypes.func.isRequired,\r\n  albumElts: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n}\r\n\r\nexport default ShelfItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faCompactDisc, \r\n  faMicrophoneAlt, \r\n  faMusic, \r\n  faTag\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from '@emotion/styled';\r\nimport { transparentize } from 'polished';\r\nimport theme from './../../../utils/colors';\r\n\r\nconst Element = styled.li`\r\n  transition: box-shadow 0.25s ease-in-out;\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  max-width: 100%;\r\n  width: 250px;\r\n  border-radius: 5px;\r\n  background-color: ${theme.cardBg};\r\n  color: ${theme.cardText};\r\n  padding: 15px;\r\n  box-shadow: ${props => props.isDragging ? `0 5px 10px ${transparentize(0.5, 'black')}` : '0 5px 10px transparent'};\r\n\r\n  ${props => props.isHorizontal ? {\r\n    display: 'inline-block',\r\n    verticalAlign: 'top'\r\n  } : null}\r\n\r\n  &::before {\r\n    content: '';\r\n    transition: background-color 0.25s ease-in-out;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 5px;\r\n    background-color: ${props => props.isDragging ? theme.primary : 'transparent'};\r\n  }\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    &::before {\r\n      background-color: ${theme.primary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  margin-top: 0;\r\n  margin-bottom: 0.5em;\r\n  line-height: 1.2;\r\n  .fa-music {\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-left: 0.5em;\r\n`;\r\n\r\nconst Year = styled.p`\r\n  justify-self: flex-end;\r\n  margin: 0;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst DataHeading = styled.h4`\r\n  display: inline-block;\r\n  margin-top: 0;\r\n  margin-bottom: 0.25em;\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst DataList = styled.ul`\r\n  display: inline;\r\n  margin-left: 0;\r\n  margin-bottom: 0.25em;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst DataItem = styled.li`\r\n  display: inline;\r\n  &:nth-of-type(n + 2) {\r\n    &:before {\r\n      content: ', '\r\n    }\r\n  }\r\n`;\r\n\r\nfunction AlbumItem({info, index, isHorizontal}) {\r\n  const artists = info?.artists.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n  const formats = info?.formats.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n  const labels = info?.labels.map(item => {\r\n    return <DataItem>{item.name}</DataItem>\r\n  })\r\n\r\n  return (\r\n    <Draggable\r\n      key={info?.id || Math.random()}\r\n      draggableId={info?.id.toString()} \r\n      index={index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <Element\r\n          key={info?.id}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          isHorizontal={isHorizontal}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          <Row as=\"header\">\r\n            <Title>\r\n              <FontAwesomeIcon icon={faMusic} />\r\n              <TitleText>{info?.title}</TitleText>\r\n            </Title>\r\n            <Year>{info?.year ? info?.year : 'Unknown'}</Year>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faMicrophoneAlt} fixedWidth />\r\n              <span className=\"sr-only\">Artists</span>\r\n            </DataHeading>\r\n            <DataList>{artists}</DataList>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faTag} fixedWidth />\r\n              <span className=\"sr-only\">Labels</span>\r\n            </DataHeading>\r\n            <DataList>{labels}</DataList>\r\n          </Row>\r\n          <Row>\r\n            <DataHeading>\r\n              <FontAwesomeIcon icon={faCompactDisc} fixedWidth />\r\n              <span className=\"sr-only\">Formats</span>\r\n            </DataHeading>\r\n            <DataList>{formats}</DataList>\r\n          </Row>\r\n        </Element>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n  info: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    artists: PropTypes.array.isRequired,\r\n    formats: PropTypes.array.isRequired,\r\n    labels: PropTypes.array.isRequired\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  isHorizontal: PropTypes.bool\r\n}\r\n\r\nexport default AlbumItem;\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport styled from '@emotion/styled';\r\nimport Unshelved from './Unshelved';\r\nimport ShelfItem from './ShelfItem';\r\nimport AlbumItem from './AlbumList/AlbumItem';\r\nimport Button from './Button';\r\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Column = styled.section`\r\n  width: calc(100% - 310px);\r\n  flex: 0 1 auto;\r\n  &:first-of-type {\r\n    flex: 0 1 310px;\r\n    padding-right: 30px;\r\n  }\r\n`;\r\n\r\nconst ShelfList = styled.ul`\r\n  max-width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nfunction DragAndDropContainer({ \r\n  allData, \r\n  newPageData,\r\n  onLoadPage, \r\n  hasLoadedAllPages,\r\n  totalAlbumCount\r\n}) {\r\n  const initialColumnsState = useMemo(() => {\r\n    return {\r\n      unshelved: {\r\n        key: 'unshelved',\r\n        name: 'Unshelved Music',\r\n        orderedIds: []\r\n      },\r\n      shelf1: {\r\n        key: 'shelf1',\r\n        name: 'My New Shelf',\r\n        orderedIds: []\r\n      }\r\n    }\r\n  }, []);\r\n  const [columns, setColumns] = useState(initialColumnsState);\r\n  const [nextShelfId, setNextShelfId] = useState(2); // One default shelf\r\n\r\n  const updateAllDataWithNewPage = useCallback((newIds) => {\r\n    if (Object.keys(allData).length) {\r\n      setColumns(prevState => {\r\n        const newUnshelvedIds = prevState['unshelved'].orderedIds.concat(newIds)\r\n        return {\r\n          ...prevState,\r\n          'unshelved': {\r\n            ...prevState['unshelved'],\r\n            orderedIds: newUnshelvedIds\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      setColumns(initialColumnsState)\r\n    }\r\n  }, [initialColumnsState, allData])\r\n\r\n  // Add newly fetched data ids to unshelved column\r\n  useEffect(() => {\r\n    const newIds = Object.keys(newPageData).map(item => item);\r\n    updateAllDataWithNewPage(newIds);\r\n  }, [newPageData, updateAllDataWithNewPage]);\r\n\r\n  const updateListContent = (result) => {\r\n    const { draggableId, source, destination } = result;\r\n    const startListId = source.droppableId;\r\n    const startListIndex = source.index;\r\n    const endListId = destination?.droppableId;\r\n    const endListIndex = destination?.index;\r\n\r\n    // If no destination, or if destination same as source, do nothing\r\n    if (!destination || (\r\n      (startListId === endListId) &&\r\n      source.index === destination.index\r\n    )) {\r\n      return;\r\n    }\r\n\r\n    // Update column orderedIds\r\n    const newStartIds = Array.from(columns[startListId].orderedIds);\r\n    newStartIds.splice(startListIndex, 1);\r\n\r\n    if (startListId === endListId) {\r\n      newStartIds.splice(endListIndex, 0, draggableId);\r\n      setColumns({\r\n        ...columns,\r\n        [startListId]: {\r\n          ...columns[startListId],\r\n          orderedIds: newStartIds\r\n        }\r\n      })\r\n    } else {\r\n      const newEndIds = Array.from(columns[endListId].orderedIds);\r\n      newEndIds.splice(endListIndex, 0, draggableId);\r\n      setColumns({\r\n        ...columns,\r\n        [startListId]: {\r\n          ...columns[startListId],\r\n          orderedIds: newStartIds\r\n        },\r\n        [endListId]: {\r\n          ...columns[endListId],\r\n          orderedIds: newEndIds\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onAddShelf = (e) => {\r\n    const newShelfId = `shelf${nextShelfId}`;\r\n    setColumns(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [newShelfId]: {\r\n          key: newShelfId,\r\n          name: 'My New Shelf',\r\n          orderedIds: []\r\n        }\r\n      }\r\n    });\r\n    setNextShelfId(prevState => prevState + 1);\r\n  }\r\n\r\n  const onDeleteShelf = (id) => {\r\n    const message = \"Any albums on this shelf will be returned to the Unshelved column. Do you still want to delete this shelf?\"\r\n    const confirmDelete = window.confirm(message)\r\n    if (confirmDelete) {\r\n      setColumns(prevState => {\r\n        const albumsInColumn = columns[id].orderedIds;\r\n        let columnsCopy = {...prevState};\r\n        delete columnsCopy[id];\r\n        const unshelvedAlbumsCopy = [...columnsCopy['unshelved'].orderedIds]\r\n        const allUnshelvedAlbums = albumsInColumn.concat(unshelvedAlbumsCopy);\r\n        return {\r\n          ...columnsCopy,\r\n          'unshelved': {\r\n            ...columnsCopy['unshelved'],\r\n            orderedIds: allUnshelvedAlbums\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const getAlbumItems = useCallback(({columnId, isHorizontal = false}) => {\r\n    const items = columns[columnId].orderedIds.map((albumId, index) => {\r\n      return (\r\n        <AlbumItem\r\n          key={albumId}\r\n          index={index}\r\n          info={allData[albumId]}\r\n          horizontal={isHorizontal}\r\n        />\r\n      )\r\n    });\r\n    return items;\r\n  }, [allData, columns]);\r\n\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={updateListContent}\r\n    >\r\n      <Column>\r\n        <Unshelved \r\n          albumsLoadedCount={Object.keys(allData).length}\r\n          totalAlbumCount={totalAlbumCount}\r\n          albumElts={getAlbumItems({ columnId: 'unshelved' })}\r\n        />\r\n        <Button \r\n          faIcon={faDownload}\r\n          text={\"Load More Albums\"}\r\n          onClick={onLoadPage} \r\n          disabled={hasLoadedAllPages}\r\n        />\r\n      </Column>\r\n      <Column>\r\n        {Object.keys(columns).length === 1 ? (\r\n          <p>Please add a shelf</p>\r\n        ) : (\r\n          <ShelfList>\r\n            {Object.keys(columns).map(columnId => {\r\n              return columnId !== 'unshelved' ? (\r\n                <ShelfItem\r\n                  key={columnId}\r\n                  id={columnId}\r\n                  onDeleteShelf={onDeleteShelf}\r\n                  albumElts={getAlbumItems({ columnId, isHorizontal: true })}\r\n                />  \r\n              ) : null\r\n            })}\r\n          </ShelfList>\r\n        )}\r\n        <Button faIcon={faPlus} text={\"Add a Shelf\"} onClick={onAddShelf} />\r\n      </Column>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nDragAndDropContainer.propTypes = {\r\n  allData: PropTypes.object.isRequired,\r\n  newPageData: PropTypes.object.isRequired,\r\n  onLoadPage: PropTypes.func.isRequired,\r\n  hasLoadedAllPages: PropTypes.bool.isRequired,\r\n  totalAlbumCount: PropTypes.number.isRequired\r\n}\r\n\r\nexport default DragAndDropContainer;\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Header from './components/Header';\nimport DragAndDropContainer from './components/DragAndDropContainer/DragAndDropContainer';\nimport styled from '@emotion/styled';\n\nconst Page = styled.div`\n  min-height: 100vh;\n  background-color: #333;\n  color: white;\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: \n      linear-gradient(to top, black, transparent), \n      url('https://loremflickr.com/g/1920/1200/music,record/all');\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n`;\n\nconst Main = styled.main`\n  position: relative;\n  display: flex;\n  padding: 50px;\n`;\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(0);\n  const [totalAlbums, setTotalAlbums] = useState(0)\n  const [newPageData, setNewPageData] = useState({});\n  const [allData, setAllData] = useState({});\n  const [username, setUsername] = useState('blacklight');\n\n  // From API array to object with ids as keys\n  const transformData = (dataArr) => {\n    let dataObj = {};\n    dataArr.forEach(item => {\n      dataObj[item.id] = item.basic_information;\n    });\n    return dataObj;\n  }\n\n  const onSubmitUser = (newUsername) => {\n    setUsername(prevState => {\n      if (prevState !== newUsername) {\n        resetDataForNewUser();\n      }\n      return newUsername;\n    });\n    setUsername(newUsername)\n  };\n\n  const updateDataOnNewPageLoad = useCallback((json) => {\n    const transformedData = transformData(json.releases)\n    setLastPage(json.pagination?.pages);\n    setTotalAlbums(json.pagination?.items);\n    setNewPageData(transformedData);\n    setAllData(prevState => {\n      return {\n        ...prevState,\n        ...transformedData\n      };\n    })\n  }, []);\n\n  const resetDataForNewUser = () => {\n    setCurrentPage(1);\n    setLastPage(0);\n    setTotalAlbums(0);\n    setNewPageData({});\n    setAllData({})\n  }\n  \n  // Get a page of data\n  useEffect(() => {\n    setIsLoaded(false);\n    setError(null);\n    fetch(`https://api.discogs.com/users/${username}/collection/folders/0/releases?page=${currentPage}&per_page=20`, \n      {\n        method: 'GET',\n        headers: {\n          'User-Agent': 'MusicLibraryDemoApp/1.0'\n        }\n      }\n    )\n      .then(response => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            setError('This username does not exist. Please try a different username.')\n          } else {\n            setError('Something went wrong.')\n          }\n          throw new Error('Network response not OK');\n        } else {\n          return response.json()\n        }\n      })\n      .then(json => {\n        updateDataOnNewPageLoad(json);\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        console.error(error)\n      });\n  }, [username, currentPage, updateDataOnNewPageLoad])\n\n  return (\n    <Page>\n      <Header username={username} onSubmitUser={onSubmitUser} />\n      <Main>\n        {error && (\n          <div>\n            <p>{error}</p>\n          </div>\n        )}\n        {!isLoaded && !error && (\n          <div>\n            <p>Loading...</p>\n          </div>\n        )}\n        {isLoaded && !error && (\n          <ErrorBoundary>\n            <DragAndDropContainer \n              allData={allData} \n              newPageData={newPageData} \n              hasLoadedAllPages={currentPage === lastPage} \n              onLoadPage={() => setCurrentPage(prevState => prevState + 1)}\n              totalAlbumCount={totalAlbums}\n            />\n          </ErrorBoundary>\n        )}\n      </Main>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}